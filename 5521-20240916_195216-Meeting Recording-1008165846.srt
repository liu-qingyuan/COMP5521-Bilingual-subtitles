1
00:00:00,000 --> 00:00:14,120
Okay, let's continue.

2
00:00:14,120 --> 00:00:20,160
So I'm glad some of you come here and ask me some questions, and some questions are

3
00:00:20,160 --> 00:00:21,160
really good.

4
00:00:21,160 --> 00:00:22,160
Okay.

5
00:00:22,160 --> 00:00:31,960
Well, I will review some answers later, just like why this RSA acronym is difficult for

6
00:00:31,960 --> 00:00:36,759
some attacker to know the private key.

7
00:00:36,759 --> 00:00:44,920
And also some still ask me, can we apply the CRT, the Chinese remanded that theorem in

8
00:00:44,920 --> 00:00:45,920
this calculation?

9
00:00:45,920 --> 00:00:49,560
Of course, we can apply it here.

10
00:00:50,160 --> 00:00:53,840
Well, let's look at this exercise.

11
00:00:53,840 --> 00:00:54,840
What's the D value?

12
00:00:54,840 --> 00:00:59,960
Can you tell me what's the D value?

13
00:00:59,960 --> 00:01:02,960
Anyone got the answer?

14
00:01:02,960 --> 00:01:05,000
D is 77.

15
00:01:05,000 --> 00:01:07,079
Okay, that's right.

16
00:01:07,079 --> 00:01:11,359
So let's have a quick calculation here.

17
00:01:11,359 --> 00:01:20,239
The phi n equals p must 1 times q must 1.

18
00:01:20,239 --> 00:01:25,200
This is 6 times 16, that's 96.

19
00:01:25,200 --> 00:01:30,400
Okay, well, we have e equals 5.

20
00:01:30,400 --> 00:01:37,039
And we should guarantee that GCD e phi n is 1.

21
00:01:37,040 --> 00:01:43,320
This is the process to get the, we apply the Euclidean algorithm.

22
00:01:43,320 --> 00:01:50,640
And this is 96 equals 5 times 19 plus 1, very easy, right?

23
00:01:50,640 --> 00:01:53,360
1 is the GCD value.

24
00:01:53,360 --> 00:02:06,240
So 1 equals 96 minus 5 times 19, 96 is phi n, and 5 is e.

25
00:02:06,239 --> 00:02:18,879
So that means D is congruent to minus 19, is congruent to phi n, phi n is 96.

26
00:02:18,879 --> 00:02:31,680
So 96 minus 19, this is 77 mod phi n, okay?

27
00:02:31,680 --> 00:02:37,280
We should have the party integer as the private key.

28
00:02:37,280 --> 00:02:40,680
Next slide, we should get the C value.

29
00:02:40,680 --> 00:02:50,400
So anyone of you get the C value?

30
00:02:50,400 --> 00:02:53,640
What's C?

31
00:02:53,639 --> 00:03:14,439
C value is m to the e mod n, and m is small, is 8, e is 5, n is 1, 1, 9, right?

32
00:03:14,439 --> 00:03:22,459
So n equals p times q, 1, 1, 9.

33
00:03:22,460 --> 00:03:30,580
So this value is 43, okay?

34
00:03:30,580 --> 00:03:33,340
Quite easy to get.

35
00:03:33,340 --> 00:03:44,060
The next step is we should get the original message m from C. So m equals C to the D

36
00:03:44,060 --> 00:03:53,659
mod n, so C is 43, D is 77, mod 1, 1, 9.

37
00:03:53,659 --> 00:03:56,900
Okay, here the data is quite large.

38
00:03:56,900 --> 00:04:03,060
So now we can apply the CRT theorem.

39
00:04:03,060 --> 00:04:12,620
We studied the part four in lecture two, so we see, well, the CRT can really reduce the

40
00:04:12,659 --> 00:04:19,980
computation time for us to quickly get the result.

41
00:04:19,980 --> 00:04:30,500
This one, suppose the value is x, x equals 43 to the 77 mod 1, 1, 9.

42
00:04:30,500 --> 00:04:39,660
So we know n equals p times q equals 7 times 17.

43
00:04:39,660 --> 00:04:52,780
So when we apply the CRT algorithm, that means we should first get 43 to the 77 mod 7, we

44
00:04:52,780 --> 00:05:01,660
get x1, 43 to the 77 mod 17, we get x2.

45
00:05:01,660 --> 00:05:07,100
From this x, y, x2, we will be able to get x.

46
00:05:07,100 --> 00:05:19,939
We have a unique x, a unique one.

47
00:05:19,939 --> 00:05:25,700
This one is smaller than 1, 1, 9, smaller than n value.

48
00:05:25,700 --> 00:05:33,660
So this is the conclusion from the CRT theorem, right?

49
00:05:33,660 --> 00:05:44,860
So instead of mod 1, 1, 9, so 1, 1, 9 is very large, because 1, 1, 9 equals 7 times 17, a part of 2 prime number.

50
00:05:44,860 --> 00:05:52,220
So we can calculate that big number, mod 7, we get x1, mod 17, we get x2.

51
00:05:52,220 --> 00:05:58,580
From these two equations, we are able to get a unique x.

52
00:05:58,580 --> 00:06:02,420
This x is smaller than 1, 1, 9, a unique one.

53
00:06:02,420 --> 00:06:09,460
So this x equals this x, that's n.

54
00:06:09,460 --> 00:06:15,060
This y, last time we introduced CRT.

55
00:06:15,060 --> 00:06:19,460
So here is actually we can quickly get x1.

56
00:06:19,460 --> 00:06:24,620
What we have is 7 is a prime number, right?

57
00:06:24,620 --> 00:06:54,259
So this one, first we look at 43 to the 77, this equals 43 equals 7 times 6 plus 1 to the 77, mod 7, right?

58
00:06:55,139 --> 00:06:58,980
Mod 7, this part is 0.

59
00:06:58,980 --> 00:07:07,659
OK, 1, mod 7, this equals 1.

60
00:07:07,659 --> 00:07:13,219
So this is x1, very fast, right?

61
00:07:13,220 --> 00:07:29,540
OK, we look at second part, 43 to the 77 in terms of 17, so 17 times 2 plus 9.

62
00:07:29,540 --> 00:07:35,500
And in the exponent part, we can apply the Fermat's theorem.

63
00:07:35,540 --> 00:07:43,860
Fermat's theorem, that means we mod p, in the exponent part, we should get the p-mass-1.

64
00:07:43,860 --> 00:08:00,540
So p-mass-1, that's 16 times 4 plus 17, well, mod 17.

65
00:08:00,580 --> 00:08:10,460
So in the Fermat's theorem, we have a to the p-mass-1 is congruent to 1 mod p, OK?

66
00:08:10,460 --> 00:08:14,900
This is relationship p, here we have p-mass-1.

67
00:08:14,900 --> 00:08:19,300
So that's the reason we have 16 here.

68
00:08:19,300 --> 00:08:28,379
So this part is 0, and this part 16 actually is congruent to 1, also can be removed.

69
00:08:28,379 --> 00:08:40,620
And well, so this one is congruent to 9 to the 13, mod 17.

70
00:08:40,620 --> 00:08:48,539
And this number is not very large, so we directly get the result to be 8.

71
00:08:48,539 --> 00:08:54,179
This is x2, very quick.

72
00:08:54,179 --> 00:09:07,139
So now from the x1, x2, we will get the unique x in the range from 0 to 1, 1, 9.

73
00:09:07,139 --> 00:09:27,740
So that means x mod 7 equals 1, x mod 17 equals 8, right?

74
00:09:27,740 --> 00:09:50,899
By applying the CRT, so we can get x equals 17 t plus 8.

75
00:09:50,899 --> 00:10:17,019
We substitute x to be in the first equation, so this we have 2 times 7 plus 3 t plus 7

76
00:10:17,019 --> 00:10:24,980
plus 1 is congruent to 1 mod 7.

77
00:10:24,980 --> 00:10:41,059
So times 7 is 0, times 7 is 0, so this implies 3 t plus 1 congruent to 1 mod 7.

78
00:10:41,059 --> 00:10:58,939
So you can see this one can be cancelled, this implies t is congruent to 0 mod 7.

79
00:10:58,939 --> 00:11:05,019
We can simply let t to be 0.

80
00:11:05,019 --> 00:11:19,379
If t is 0, then x is 8.

81
00:11:19,379 --> 00:11:28,299
So t is 0, that means t can take 0, then x is 8.

82
00:11:28,299 --> 00:11:44,579
So we get the original message m to be 8.

83
00:11:58,299 --> 00:12:04,099
Is that clear?

84
00:12:04,099 --> 00:12:11,859
So we apply the CRT theorem here, and you should be able to apply CRT, this theorem

85
00:12:11,859 --> 00:12:14,979
in your calculation.

86
00:12:14,979 --> 00:12:22,059
It could be required in your midterm test.

87
00:12:22,059 --> 00:12:27,819
So of course I will try to design the number to be not that large, just like in this example,

88
00:12:27,820 --> 00:12:34,660
you can well quickly cancel some data and get the result to make the calculator to

89
00:12:34,660 --> 00:12:56,700
be smaller, and then you can use your calculator to quickly get like x, y, x2, any questions?

90
00:12:56,700 --> 00:13:00,500
Okay, so now we move to our part 3.

91
00:13:00,500 --> 00:13:07,259
Part 3 is about Diffie-Hellman algorithm, and this one is also very important.

92
00:13:07,259 --> 00:13:12,500
So in mining cryptography, we talk about RSA, we talk about the Diffie-Hellman.

93
00:13:12,500 --> 00:13:17,379
This algorithm is principle, very important.

94
00:13:17,379 --> 00:13:24,180
So in the Diffie-Hellman algorithm, we should have two very large numbers.

95
00:13:24,179 --> 00:13:33,819
So y is p, and so y is primitive root g, or p.

96
00:13:33,819 --> 00:13:45,699
So primitive root, in some cases, we call it to be generator.

97
00:13:45,700 --> 00:13:58,780
And both p and g are public null, and p should be at least 112 bits, p is very large.

98
00:13:58,780 --> 00:14:02,940
Suppose we have two users, Alice and Bob.

99
00:14:02,940 --> 00:14:12,180
So Alice will choose a private value a, and Bob will choose a private data b.

100
00:14:12,179 --> 00:14:17,779
And locally, each user will do the calculation.

101
00:14:17,779 --> 00:14:28,739
So Alice will do the calculation based on the generator g, g to the a, a is a private

102
00:14:28,739 --> 00:14:30,699
data.

103
00:14:30,699 --> 00:14:35,179
So Alice can calculate g to the a mod p.

104
00:14:35,179 --> 00:14:44,979
So gp or polynomial.

105
00:14:44,979 --> 00:14:53,939
And Bob will locally calculate small y, y equals g to the b mod p.

106
00:14:53,939 --> 00:15:01,259
Then these two values, x, y will be exchanged, so that means x will be sent to Bob, y will

107
00:15:01,340 --> 00:15:05,899
be sent to Alice.

108
00:15:05,899 --> 00:15:12,620
And well, then Alice and Bob will do the following calculation.

109
00:15:12,620 --> 00:15:26,659
So Alice get y from Bob, and she will use y to the a mod p to get the key a.

110
00:15:26,659 --> 00:15:41,419
So this key a, in fact, equals y is g to the b, that's what, value.

111
00:15:41,419 --> 00:15:47,299
So y is g to the b, mod p, g to the b.

112
00:15:47,299 --> 00:15:54,139
And then we have the exponent a here, mod p.

113
00:15:54,139 --> 00:16:00,699
And this equals g to the a times b, mod p.

114
00:16:00,699 --> 00:16:07,579
And similarly, Bob will do this calculation, x to the b mod p.

115
00:16:07,579 --> 00:16:14,699
x is obtained from Alice, x equals g to the a.

116
00:16:14,700 --> 00:16:22,780
So this part is x, this part is small y, mod p.

117
00:16:22,780 --> 00:16:30,420
This one also equals g to the a times b, mod p.

118
00:16:30,420 --> 00:16:36,980
So algebraically, it can be shown that ka equals kb.

119
00:16:36,980 --> 00:16:44,899
So in this way, Alice and Bob now have a symmetric key for communications.

120
00:16:44,899 --> 00:16:52,340
In a symmetric communication, in a symmetric key scheme, both users, like in the AES, they

121
00:16:52,340 --> 00:16:57,019
should have a secret key k.

122
00:16:57,019 --> 00:17:10,099
And Diffie-Hellman algorithm can allow them to calculate this key k for the communication.

123
00:17:10,099 --> 00:17:18,819
So this process, based on Diffie-Hellman algorithm, Alice will locally choose gp to be known,

124
00:17:18,819 --> 00:17:23,220
and this one will only be known by small a.

125
00:17:23,220 --> 00:17:26,859
So Alice will calculate the big a.

126
00:17:26,859 --> 00:17:30,419
These three data will be sent to Bob.

127
00:17:30,419 --> 00:17:41,179
Bob will use his locally chosen data b, a secret to Bob, to calculate gb.

128
00:17:41,179 --> 00:17:49,299
So Bob will get k, the same key k, equals a to the b mod p.

129
00:17:49,299 --> 00:17:55,259
And Alice will calculate this b obtained from Bob.

130
00:17:55,259 --> 00:18:01,640
So Alice will get the same k to be b to the a mod p.

131
00:18:01,640 --> 00:18:09,460
And this key k is the same.

132
00:18:09,460 --> 00:18:19,579
So later, Alice and Bob can do the encryption-decryption using the same key k in their communicated

133
00:18:19,579 --> 00:18:21,379
messages.

134
00:18:21,379 --> 00:18:30,659
Is that clear?

135
00:18:30,659 --> 00:18:43,299
So they only have the g is a primitive root, p is a very large prime number.

136
00:18:43,299 --> 00:18:57,460
We look at this example, suppose Alice and Bob get public numbers p to be 23 and g to

137
00:18:57,460 --> 00:19:01,200
be 9.

138
00:19:01,200 --> 00:19:07,980
So suppose Alice chooses the private data to be 4 and Bob chooses the private data to

139
00:19:07,980 --> 00:19:10,460
be 3.

140
00:19:10,460 --> 00:19:16,860
And they will compute x, y locally.

141
00:19:16,860 --> 00:19:25,539
Alice will calculate x, Bob will calculate y using the public number p and g.

142
00:19:25,539 --> 00:19:35,500
So in this example, x equals 9 to the 4th mod 23.

143
00:19:35,500 --> 00:19:49,940
And this is the value to be 6561 mod 23, this is 6.

144
00:19:49,940 --> 00:19:57,700
And Bob will calculate line to the cube mod 23.

145
00:19:57,700 --> 00:20:04,180
And this is 7 to line mod 23.

146
00:20:04,180 --> 00:20:08,740
This is 16.

147
00:20:08,740 --> 00:20:22,539
And this 6 will be sent to Bob and 16 will be sent to Alice.

148
00:20:22,539 --> 00:20:27,779
So Alice will do the calculation to get the symmetric key.

149
00:20:27,779 --> 00:20:32,180
And previously, we can see Alice will get 16.

150
00:20:32,180 --> 00:20:44,180
16 to the local data to be 4 mod p.

151
00:20:44,180 --> 00:20:48,660
So p is 23.

152
00:20:48,660 --> 00:20:51,380
And this value is 9.

153
00:20:51,380 --> 00:20:57,539
Bob will get x from Alice.

154
00:20:57,539 --> 00:21:02,220
So Bob will get 6.

155
00:21:02,220 --> 00:21:16,339
So this 6 to his local data of 3 mod p again.

156
00:21:16,339 --> 00:21:19,359
And this value is also 9.

157
00:21:19,359 --> 00:21:26,960
So Alice and Bob now have the symmetric key line.

158
00:21:26,960 --> 00:21:40,920
So this key k can be used for encryption and decryption in a symmetric encryption scheme.

159
00:21:56,960 --> 00:22:07,920
Any questions?

160
00:22:07,920 --> 00:22:24,779
Okay if no question, can you use 5 minutes to solve this exercise?

161
00:22:24,779 --> 00:22:30,599
So in this exercise, you should be able to calculate the same key obtained by Alice and Bob.

162
00:25:24,779 --> 00:25:50,639
Okay, some of you have finished, so I can share with you the result here.

163
00:25:50,640 --> 00:25:55,100
In this example, we have the public key here to be p and g.

164
00:25:55,100 --> 00:26:03,580
So p is 23, that's p and g, the generator is 5.

165
00:26:03,580 --> 00:26:09,460
Well Alice chose the secret integer a equals 4, b is 3.

166
00:26:09,460 --> 00:26:25,960
So Alice will calculate x is g to the a mod p, 5 to the 4 mod p is 23.

167
00:26:25,960 --> 00:26:29,600
This x is 4.

168
00:26:29,599 --> 00:26:44,659
So Bob will calculate y, g to the b mod p is g to the 3 mod 23.

169
00:26:44,659 --> 00:26:52,559
This is 10.

170
00:26:52,559 --> 00:26:57,480
Because here we ask you to show the key exchange process, right?

171
00:26:57,480 --> 00:27:05,420
So you should show this intermediate result and this x will be sent to Bob and y will be sent to Alice.

172
00:27:05,420 --> 00:27:25,839
So finally the key k equals x to the a again, sorry, x to the b, this is a calculation just like Bob, x to the b mod p.

173
00:27:25,839 --> 00:27:33,119
In fact, this equals g to the a b mod p.

174
00:27:33,119 --> 00:27:52,000
So x to the b is 10 to the b is 3, mod 23, this is 18.

175
00:27:52,000 --> 00:28:14,799
Similarly, Alice can get the key k equals y from Bob to the a mod p, y is 10, a is 4, mod p is 23, this is also 18.

176
00:28:14,799 --> 00:28:27,599
So this is equals the g a b, g is 5, a times b is 4 times 3, mod p 23, this is 18.

177
00:28:45,599 --> 00:28:51,599
Okay, so we finished this part two about the Diffie-Hellman algorithm, part three.

178
00:28:51,599 --> 00:28:57,599
So any question, comments?

179
00:28:57,599 --> 00:29:09,599
For this lecture time, we stop here. Today we have the lab one and T is here, so we have a break probably five minutes for the sit-up of your lab.

180
00:29:09,599 --> 00:29:12,599
So we finish here, thank you.

181
00:29:14,799 --> 00:29:16,599
Thank you.

